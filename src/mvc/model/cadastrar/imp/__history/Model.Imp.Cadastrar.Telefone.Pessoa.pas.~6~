{*******************************************************}
{                    API PDV - JSON                     }
{                      Be More Web                      }
{          Início do projeto 02/05/2024 11:44           }
{                 www.bemoreweb.com.br                  }
{                     (17)98169-5336                    }
{                        2003/2024                      }
{         Analista desenvolvedor (Eleandro Silva)       }
{*******************************************************}
unit Model.Imp.Cadastrar.Telefone.Pessoa;

interface

uses
  Data.DB,
  System.JSON,

  DataSet.Serialize,

  Model.Cadastrar.Telefone.Pessoa.Interfaces,
  Model.Entidade.Telefone.Pessoa.Interfaces,
  Controller.Interfaces;

type
  TCadastrarTelefonePessoa = class(TInterfacedObject, iCadastrarTelefonePessoa)
    private
      FController       : iController;
      FTelefonePessoa   : iEntidadeTelefonePessoa<iCadastrarTelefonePessoa>;
      FJSONArray        : TJSONArray;
      FJSONObject       : TJSONObject;
      FJSONObjectPai    : TJSONObject;
      FDSTelefonePessoa : TDataSource;

      FError : Boolean;
      FQuantidadeRegistro : Integer;
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iCadastrarTelefonePessoa;

      function JSONObjectPai(Value : TJSONObject) : iCadastrarTelefonePessoa; overload;
      function JSONObjectPai                      : TJSONObject;              overload;
      function Post  : iCadastrarTelefonePessoa;
      function Error : Boolean;
      //injeção de dependência
      function TelefonePessoa : iEntidadeTelefonePessoa<iCadastrarTelefonePessoa>;
      function &End : iCadastrarTelefonePessoa;
  end;

implementation

uses
  Imp.Controller, Model.Entidade.Imp.Telefone.Pessoa;

{ TCadastrarTelefonePessoa }

constructor TCadastrarTelefonePessoa.Create;
begin
  FController       := TController.New;
  FTelefonePessoa   := TEntidadeTelefonePessoa<iCadastrarTelefonePessoa>.New(Self);
  FDSTelefonePessoa := TDataSource.Create(nil);

  FError := False;
  FQuantidadeRegistro := 0;
end;

destructor TCadastrarTelefonePessoa.Destroy;
begin
  inherited;
end;

class function TCadastrarTelefonePessoa.New: iCadastrarTelefonePessoa;
begin
  Result := Self.Create;
end;

function TCadastrarTelefonePessoa.Error: Boolean;
begin
  Result := FError;
end;

function TCadastrarTelefonePessoa.JSONObjectPai(Value: TJSONObject): iCadastrarTelefonePessoa;
begin
  Result := Self;
  FJSONObject := Value;
end;

function TCadastrarTelefonePessoa.JSONObjectPai: TJSONObject;
begin
  Result := FJSONObject;
end;



function TCadastrarTelefonePessoa.Post: iCadastrarTelefonePessoa;
begin

end;

//INjeção de dependência
function TCadastrarTelefonePessoa.TelefonePessoa: iEntidadeTelefonePessoa<iCadastrarTelefonePessoa>;
begin
  Result := FTelefonePessoa;
end;

function TCadastrarTelefonePessoa.&End: iCadastrarTelefonePessoa;
begin
  Result := Self;
end;

end.
