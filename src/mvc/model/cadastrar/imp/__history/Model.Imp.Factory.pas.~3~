unit Model.Imp.Factory;

interface

uses
  Model.Factory.Interfaces,
  Model.Cadastrar.Usuario.Interfaces;

type
  TViewFactory = class(TInterfacedObject, iViewFactory)
    private
      FCadastrarUsuario : iCadastrarUsuario;
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iViewFactory;

      function CadastrarUsuario : iCadastrarUsuario;
  end;

implementation

uses
  Model.Imp.Cadastrar.Usuario;

{ TViewFactory }

constructor TViewFactory.Create;
begin
  //
end;

destructor TViewFactory.Destroy;
begin
  inherited;
end;

class function TViewFactory.New: iViewFactory;
begin
  Result := Self.Create;
end;

function TViewFactory.CadastrarUsuario: iCadastrarUsuario;
begin
  if not Assigned(FCadastrarUsuario) then
    FCadastrarUsuario := TCadastrarUsuario.New;

  Result := FCadastrarUsuario;
end;

end.
