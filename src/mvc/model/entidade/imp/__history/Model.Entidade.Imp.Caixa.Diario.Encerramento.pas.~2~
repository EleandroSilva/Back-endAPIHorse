unit Model.Entidade.Imp.Caixa.Diario.Encerramento;

interface

type
  TEntidadeCaixaDiarioEncerramento<T : iInterface> = class(TInterfacedObject, iCaixaDiarioEncerramento<T>)
    private
      [weak]
      FParent          : T;
      FId              : Integer;
      FIdCaixaDiario   : Integer;
      FIdUsuario       : Integer;
      FValorLancamento : Currency;
      FDataHoraEmissao : TDateTime;
      FObservacao      : String;
    public
      constructor Create(Parent : T);
      destructor Destroy; override;
      class function New(Parent : T) : iEntidadeCaixaDiarioEncerramento<T>;
  end;

implementation

{ TEntidadeCaixaDiarioEncerramento<T> }

constructor TEntidadeCaixaDiarioEncerramento<T>.Create(Parent: T);
begin
  FParent := Parent;
end;

destructor TEntidadeCaixaDiarioEncerramento<T>.Destroy;
begin
  inherited;
end;

class function TEntidadeCaixaDiarioEncerramento<T>.New(Parent: T): iEntidadeCaixaDiarioEncerramento<T>;
begin
  Result := Self.Create(Parent);
end;

end.
