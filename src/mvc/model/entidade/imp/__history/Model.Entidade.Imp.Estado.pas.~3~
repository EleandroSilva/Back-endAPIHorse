unit Model.Entidade.Imp.Estado;

interface

uses
  Model.Entidade.Estado.Interfaces;

type
  TEntidadeEstado<T : iInterface> = class(TInterfacedObject, iEntidadeEstado<T>)
    private
      [weak]
      FParent    : T;
      FId        : Integer;
      FIdEstado  : Integer;
      FIBGE      : String;
      FMunicipio : String;
      FUF        : String;
      function RegiaoEstado : iEntidadeRegiaoEstado<iEntidadeEstado<T>>;
    public
      constructor Create(Parent : T);
      destructor Destroy; override;
      class function New(Parent : T) : iEntidadeEstado<T>;

      function Id       (Value : Integer) : iEntidadeEstado<T>; overload;
      function Id                         : Integer;            overload;
      function IdEstado (Value : Integer) : iEntidadeEstado<T>; overload;
      function IdEstado                   : Integer;            overload;
      function IdRegiao (Value : Integer) : iEntidadeEstado<T>; overload;
      function IdRegiao                   : Integer;            overload;
      function Estado   (Value : String)  : iEntidadeEstado<T>; overload;
      function Estado                     : String;             overload;
      function UF       (Value : String)  : iEntidadeEstado<T>; overload;
      function UF                         : String;             overload;

      //Injeção de dependência
      function RegiaoEstado : iEntidadeRegiaoEstado<iEntidadeEstado<T>>;
      function &End : T;
  end;

implementation

end.
