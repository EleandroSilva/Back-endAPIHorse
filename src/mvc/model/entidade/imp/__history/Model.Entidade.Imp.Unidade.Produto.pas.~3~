unit Model.Entidade.Imp.Unidade.Produto;

interface

uses
  Model.Entidade.Unidade.Produto.Interfaces;

type
  TEntidadeUnidadeProduto<T : iInterface> = class(TInterfacedObject, iEntidadeUnidadeProduto<T>)
    private
      [Weak]
      FParent  : T;
      FId      : Integer;
      FUnidade : String;
      FNome    : String;
    public
      constructor Create(Parent : T);
      destructor Destroy; override;
      class function New(Parent : T) : iEntidadeUnidadeProduto<T>;

      function Id(Value : Integer)       : iEntidadeUnidadeProduto<T>; overload;
      function Id                        : Integer;                    overload;
      function Unidade(Value : String)   : iEntidadeUnidadeProduto<T>; overload;
      function Unidade                   : String;                     overload;
      function Nome(Value : String)      : iEntidadeUnidadeProduto<T>; overload;
      function Nome                      : String;                     overload;

      function &End : T;
  end;

implementation

{ TEntidadeUnidadeProduto<T> }

constructor TEntidadeUnidadeProduto<T>.Create(Parent: T);
begin
  FParent := Parent;
end;

destructor TEntidadeUnidadeProduto<T>.Destroy;
begin
  inherited;
end;

class function TEntidadeUnidadeProduto<T>.New(Parent: T): iEntidadeUnidadeProduto<T>;
begin
  Result := Self.Create(Parent);
end;



function TEntidadeUnidadeProduto<T>.Id(Value: Integer): iEntidadeUnidadeProduto<T>;
begin
  Result := Self;
  FId    := Value;
end;

function TEntidadeUnidadeProduto<T>.Id: Integer;
begin
  Result := FId;
end;

function TEntidadeUnidadeProduto<T>.Unidade(Value: String): iEntidadeUnidadeProduto<T>;
begin
  Result := Self;
  FUnidade := Value;
end;

function TEntidadeUnidadeProduto<T>.Unidade: String;
begin
  Result := FUnidade;
end;

function TEntidadeUnidadeProduto<T>.Nome(Value: String): iEntidadeUnidadeProduto<T>;
begin
  Result := Self;
  FNome := Value;
end;

function TEntidadeUnidadeProduto<T>.Nome: String;
begin
  Result := FNome;
end;

function TEntidadeUnidadeProduto<T>.&End: T;
begin
  Result := FParent;
end;

end.
