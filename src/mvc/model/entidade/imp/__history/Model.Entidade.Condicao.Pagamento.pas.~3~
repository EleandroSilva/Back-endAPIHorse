unit Model.Entidade.Condicao.Pagamento;

interface

uses
  Model.Entidade.Condicao.Pagamento.Interfaces;

Type
  TEntidadeCondicaoPagamento<T : iInterface> = class(TInterfacedObject, iEntidadeCondicaoPagamento<T>)
    private
      [weak]
      FParent                : T;
      FId                    : Integer;
      FIdEmpresa             : Integer;
      FIdUsuario             : Integer;
      FNomeCondicaoPagamento : String;
      FQuantidadePagamento   : Integer;
      FTotalDias             : Integer;
      FDataHoraEmissao       : TDateTime;
    public
      constructor Create(Parent : T);
      destructor Destroy; override;
      class function New(Parent : T) : iEntidadeCondicaoPagamento<T>;
  end;

implementation

{ TEntidadeCondicaoPagamento<T> }

constructor TEntidadeCondicaoPagamento<T>.Create(Parent: T);
begin
  FParent := Parent;
end;

destructor TEntidadeCondicaoPagamento<T>.Destroy;
begin
  inherited;
end;

class function TEntidadeCondicaoPagamento<T>.New(Parent: T): iEntidadeCondicaoPagamento<T>;
begin
  Result := Self.Create(Parent);
end;

end.
