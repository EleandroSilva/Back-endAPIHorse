{*******************************************************}
{                    API PDV - JSON                     }
{                      Be More Web                      }
{          Início do projeto 30/04/2024 23:48           }
{                 www.bemoreweb.com.br                  }
{                     (17)98169-5336                    }
{                        2003/2024                      }
{         Analista desenvolvedor (Eleandro Silva)       }
{*******************************************************}
unit Model.Imp.Alterar.Email.Empresa;

interface

uses
  Data.DB,
  System.JSON,

  Model.Alterar.Email.Empresa.Interfaces,
  Model.Entidade.Email.Empresa.Interfaces,
  Controller.Interfaces;

type
  TAlterarEmailEmpresa = class(TInterfacedObject, iAlterarEmailEmpresa)
    private
      FController     : iController;
      FEmailEmpresa   : iEntidadeEmailEmpresa<iAlterarEmailEmpresa>;
      FDSEmailEmpresa : TDataSource;

      FFound : Boolean;
      FError : Boolean;
    public
      constructor Create;
      destructor Destroy; override;
      class function New : iAlterarEmailEmpresa;

      function Put  : iAlterarEmailEmpresa;
      function GetByEmail(IdEmpresa : Integer; Email: String) :iAlterarEmailEmpresa;
      function LoopEmailEmpresa : TJSONValue;

      function Found : Boolean;
      function Error : Boolean;
      //injeção de dependência
      function EmailEmpresa : iEntidadeEmailEmpresa<iAlterarEmailEmpresa>;
      function &End : iAlterarEmailEmpresa;
  end;

implementation

uses
  Imp.Controller,
  Model.Entidade.Imp.Email.Empresa;

{ TAlterarEmailEmpresa }

constructor TAlterarEmailEmpresa.Create;
begin
  FController     := TController.New;
  FEmailEmpresa   := TEntidadeEmailEmpresa<iAlterarEmailEmpresa>.New(Self);
  FDSEmailEmpresa := TDataSource;

  FFound := False;
  FError := False;
end;

destructor TAlterarEmailEmpresa.Destroy;
begin
  inherited;
end;

class function TAlterarEmailEmpresa.New: iAlterarEmailEmpresa;
begin
  Result := Self.Create;
end;

function TAlterarEmailEmpresa.GetByEmail(IdEmpresa: Integer; Email: String): iAlterarEmailEmpresa;
begin

end;

function TAlterarEmailEmpresa.LoopEmailEmpresa: TJSONValue;
begin

end;

function TAlterarEmailEmpresa.Put: iAlterarEmailEmpresa;
begin

end;

//Injeção de dependência
function TAlterarEmailEmpresa.EmailEmpresa: iEntidadeEmailEmpresa<iAlterarEmailEmpresa>;
begin
  Result := FEmailEmpresa;
end;

function TAlterarEmailEmpresa.&End: iAlterarEmailEmpresa;
begin
  Result := Self;
end;

function TAlterarEmailEmpresa.Found: Boolean;
begin
  Result := FFound;
end;

function TAlterarEmailEmpresa.Error: Boolean;
begin
  Result := FError;
end;

end.
