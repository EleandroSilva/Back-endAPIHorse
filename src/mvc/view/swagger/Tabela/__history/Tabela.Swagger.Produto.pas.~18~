{*******************************************************}
{                    API PDV - JSON                     }
{                      ES Sistemas                      }
{            Início do projeto 09/04/2024               }
{                 www.bemoreweb.com.br                  }
{                     (17)98169-5336                    }
{                        2003/2023                      }
{         Analista desenvolvedor (Eleandro Silva)       }
{*******************************************************}
unit Tabela.Swagger.Produto;

interface

uses
  GBSwagger.Model.Attributes;

type
  TProduto = class
    private
      FId                  : Integer;{Bigint->Primary Key Not Null AUTO_INCREMENT}
      FIdEmpresa           : Integer;{Bigint Not Null->Foreign Key->Tabela empresa, Excluír(Cascade); Alterar(Cascade)}
      FIdUsuario           : Integer;
      FIdCategoria         : Integer;{Bigint Not Null->Foreign Key ->Tabela categoriaproduto->Id}
      FIdUnidade           : Integer;{Bigint Not Null->Foreign Key ->Tabela unidade->Id}
      FGtin                : String;{Varchar(20) DEFAULT NULL}
      FCeanTrib            : String;{Varchar(20) Not Null 'sera o codigo unitario do produto'}
      FCean                : String;{Varchar(20) Not Null seria o preco(exemplo de um fardo de cerveja)'}
      FNome                : String;{Varchar(100) Not null->UniqueKey}
      FNCM                 : Integer;{Integer Not Null}
      FValorCusto          : Currency;{decimal(10,4) Not Null}
      FAliquotaLucro       : Currency;{decimal(10,2) Not Null}
      FValorVendaGelado    : Currency;{decimal(10,4) Not Null}
      FValorVendaNatural   : Currency;{decimal(10,4) Not Null}
      FValorPromocional    : Currency;{decimal(10,4) Not Null 'Usar esta coluna quanto o estabelecimento queira fazer preço promocional'}
      FEstoqueAnterior     : Currency;{decimal(10,4) Not Null}
      FEstoqueMaximo       : Currency;{decimal(10,4) Not Null}
      FEstoqueMinimo       : Currency;{decimal(10,4) Not Null}
      FEstoqueAtual        : Currency;{decimal(10,4) Not Null}
      FOrigem              : Integer;{Integer Not Null 'Coluna informa se este produto foi importado\Usado para calculo tabela IBPT(ufunctioncalculo-calcula_imp_aprox_tab_ibtp-)\r\n0 - 3 - 4 - 5=Não foi importado então não calcular\r\n1 - 2 - 6 - 7=Sim foi importado então calcular'}
      FVolume              : Integer;{Integer Not Null}
      FQuantidadeEmbalagem : Integer;{Integer Not Null}
      FBalanca             : Integer; {Integer Not Null COMMENT 'Informar 0 = este produto não é de balança; 1 = este produto é de balança 2 = todos'}
      FPesoLiquido         : Currency;{decimal(10,2) Not Null}
      FPesoBruto           : Currency;{decimal(10,2) Not Null->Peso total do produto}
      FDataHoraEmissao     : TDate;{Not Null->Data que cadastrou no sistema}
      FAtivo               : Integer;{Integer ->Nnot Null}
    public
      [SwagParamQuery('id', true)]
      [SwagProp('PRIMARY KEY (auto_increment)', True)]
      [SwagProp(False, True)]
      property id                  : Integer  read FId                  write FId;
      [SwagProp('Foreign Key->Tabela (categoriaproduto<-Idempresa=id->Tabela empresa)) Excluír=Cascade; Alterar=Cascade', True)]
      property idempresa           : Integer  read FIdEmpresa           write FIdEmpresa;
      [SwagProp('Foreign Key->Tabela (produto<-Idusuario=id->Tabela usuario))', True)]
      property idusuario           : Integer  read FIdUsuario           write FIdUsuario;
      [SwagProp('Foreign Key->Tabela (categoriaproduto<-Idusuario=id->Tabela usuario))', True)]
      property idcategoria         : Integer  read FIdCategoria         write FIdCategoria;
      [SwagProp('Foreign Key->Tabela (unidadeproduto<-Idusuario=id->Tabela usuario))', True)]
      property idunidade           : Integer  read FIdUnidade           write FIdUnidade;
      property gtin                : String   read FGtin                write FGtin;
      property ceanTrib            : String   read FCeanTrib            write FCeanTrib;
      property cean                : String   read FCean                write FCean;
      property nome                : String   read FNome                write FNome;
      property ncm                 : Integer  read FNCM                 write FNCM;
      property valorcusto          : Currency read FValorCusto          write FValorCusto;
      property aliquotalucro       : Currency read FAliquotaLucro       write FAliquotaLucro;
      property valorvendaGelado    : Currency read FValorVendaGelado    write FValorVendaGelado;
      property valorvendaNatural   : Currency read FValorVendaNatural   write FValorVendaNatural;
      property valorpromocional    : Currency read FValorPromocional    write FValorPromocional;
      property estoqueanterior     : Currency read FEstoqueAnterior     write FEstoqueAnterior;
      property estoquemaximo       : Currency read FEstoqueMaximo       write FEstoqueMaximo;
      property estoqueminimo       : Currency read FEstoqueMinimo       write FEstoqueMinimo;
      property estoqueatual        : Currency read FEstoqueAtual        write FEstoqueAtual;
      property origem              : Integer  read FOrigem              write FOrigem;
      property volume              : Integer  read FVolume              write FVolume;
      property quantidadeembalagem : Integer  read FQuantidadeEmbalagem write FQuantidadeEmbalagem;
      property balanca             : Integer  read FBalanca             write FBalanca;
      property pesoLiquido         : Currency read FPesoLiquido         write FPesoLiquido;
      property pesoBruto           : Currency read FPesoBruto           write FPesoBruto;
      property datahoraEmissao     : TDate    read FDataHoraEmissao     write FDataHoraEmissao;
      property ativo               : Integer  read FAtivo               write FAtivo;
  end;

implementation

end.
